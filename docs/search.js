window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"smlc": {"fullname": "smlc", "modulename": "smlc", "kind": "module", "doc": "<p>Simple Machine Learning Cooperation.</p>\n"}, "smlc.metadata": {"fullname": "smlc.metadata", "modulename": "smlc.metadata", "kind": "module", "doc": "<p>Metadata module.</p>\n"}, "smlc.metadata.ParsedURL": {"fullname": "smlc.metadata.ParsedURL", "modulename": "smlc.metadata", "qualname": "ParsedURL", "kind": "variable", "doc": "<p>See <code>MetadataManager</code> constructor.</p>\n", "default_value": "typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult]"}, "smlc.metadata.MetadataManager": {"fullname": "smlc.metadata.MetadataManager", "modulename": "smlc.metadata", "qualname": "MetadataManager", "kind": "class", "doc": "<p>Metadata manager.</p>\n"}, "smlc.metadata.MetadataManager.__init__": {"fullname": "smlc.metadata.MetadataManager.__init__", "modulename": "smlc.metadata", "qualname": "MetadataManager.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>spliturl</strong> (bool, default <code>False</code>):\n<code>False</code> for <a href=\"https://datatracker.ietf.org/doc/html/rfc1808.html\">RFC 1808</a>,\n<code>True</code> for <a href=\"https://datatracker.ietf.org/doc/html/rfc2396.html\">RFC 2396</a>.\nSee <a href=\"https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse\">urllib doc</a>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">spliturl</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "smlc.metadata.MetadataManager.table_is_registered": {"fullname": "smlc.metadata.MetadataManager.table_is_registered", "modulename": "smlc.metadata", "qualname": "MetadataManager.table_is_registered", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>turl</strong> (Union[str, <code>ParsedURL</code>]):\nTable's URL.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTemporaryFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t1fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MetadataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">table_is_registered</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">ParseResult(scheme=&#39;file&#39;, netloc=&#39;&#39;, path=..., params=&#39;&#39;, query=&#39;&#39;, fragment=&#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">table_is_registered</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">unregister_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">table_is_registered</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">turl</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.metadata.MetadataManager.register_table": {"fullname": "smlc.metadata.MetadataManager.register_table", "modulename": "smlc.metadata", "qualname": "MetadataManager.register_table", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>turl</strong> (Union[str, <code>ParsedURL</code>]):\nTable's URL.</li>\n<li><strong>raise_registered</strong> (bool, default <code>True</code>):\nIf <code>True</code>, raises <code>ValueError</code> when caller tries to register already registered table.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTemporaryFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t1fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MetadataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">ParseResult(scheme=&#39;file&#39;, netloc=&#39;&#39;, path=..., params=&#39;&#39;, query=&#39;&#39;, fragment=&#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">table ... is already registered</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t2fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t2_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t2fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t2_url</span><span class=\"p\">)</span>\n<span class=\"go\">ParseResult(scheme=&#39;file&#39;, netloc=&#39;&#39;, path=..., params=&#39;&#39;, query=&#39;&#39;, fragment=&#39;&#39;)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">turl</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">raise_registered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "smlc.metadata.MetadataManager.unregister_table": {"fullname": "smlc.metadata.MetadataManager.unregister_table", "modulename": "smlc.metadata", "qualname": "MetadataManager.unregister_table", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>turl</strong> (Union[str, <code>ParsedURL</code>]):\nTable's URL.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTemporaryFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t1fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MetadataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">ParseResult(scheme=&#39;file&#39;, netloc=&#39;&#39;, path=..., params=&#39;&#39;, query=&#39;&#39;, fragment=&#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">table ... is already registered</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">unregister_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">register_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">ParseResult(scheme=&#39;file&#39;, netloc=&#39;&#39;, path=..., params=&#39;&#39;, query=&#39;&#39;, fragment=&#39;&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">unregister_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">unregister_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">KeyError</span>: <span class=\"n\">&#39;table ... is not registered&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">turl</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"fullname": "smlc.metadata.MetadataManager.knowledge_base_for_table", "modulename": "smlc.metadata", "qualname": "MetadataManager.knowledge_base_for_table", "kind": "function", "doc": "<p>Convenient factory for <code>KnowledgeBaseForTable</code>.\n<code>mm.knowledge_base_for_table(turl, **kwargs)</code> is equivalent of\n<code>KnowledgeBaseForTable(mm, turl, **kwargs)</code>. If table is not\nregistered, registers table.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>turl</strong> (Union[str, <code>ParsedURL</code>]):\nTable's URL.</li>\n<li><strong>**kwargs :</strong>: Named arguments passed to <code>KnowledgeBaseForTable</code> constructor.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTemporaryFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t1fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MetadataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kb</span> <span class=\"o\">=</span> <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">knowledge_base_for_table</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">turl</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">KnowledgeBaseForTable</span>:</span></span>", "funcdef": "def"}, "smlc.metadata.KnowledgeBaseForTable": {"fullname": "smlc.metadata.KnowledgeBaseForTable", "modulename": "smlc.metadata", "qualname": "KnowledgeBaseForTable", "kind": "class", "doc": "<p>Knowledge base for single table.</p>\n\n<p>Attributes are computed on-demand (lazy evaluation) and then stored.\nIf you want to recompute an attribute, delete (<code>del\nknowledge_base.attr</code>) and re-evaluate it.</p>\n"}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"fullname": "smlc.metadata.KnowledgeBaseForTable.__init__", "modulename": "smlc.metadata", "qualname": "KnowledgeBaseForTable.__init__", "kind": "function", "doc": "<p>Calling <code>MetadataManager</code>.<code>knowledge_base_for_table</code> factory is\npreferable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>mm</strong> (<code>MetadataManager</code>):</p></li>\n<li><p><strong>turl</strong> (<code>Union[str, ParsedUrl]</code>):\nTable's URL.</p></li>\n<li><strong>unregister_table_on_deletion</strong> (bool, defaults <code>False</code>):\nIf <code>True</code>, <code>del knowledge_base</code> unregisteres table.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTemporaryFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1fp</span> <span class=\"o\">=</span> <span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t1_url</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">t1fp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_uri</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MetadataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kb</span> <span class=\"o\">=</span> <span class=\"n\">KnowledgeBaseForTable</span><span class=\"p\">(</span><span class=\"n\">mm</span><span class=\"p\">,</span> <span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">kb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">table_is_registered</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">kb</span> <span class=\"o\">=</span> <span class=\"n\">KnowledgeBaseForTable</span><span class=\"p\">(</span><span class=\"n\">mm</span><span class=\"p\">,</span> <span class=\"n\">t1_url</span><span class=\"p\">,</span> <span class=\"n\">unregister_table_on_deletion</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">kb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">table_is_registered</span><span class=\"p\">(</span><span class=\"n\">t1_url</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mm</span><span class=\"p\">:</span> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">MetadataManager</span>,</span><span class=\"param\">\t<span class=\"n\">turl</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">ParseResult</span><span class=\"p\">,</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">SplitResult</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">unregister_table_on_deletion</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "smlc.metadata.KnowledgeBaseForTable.turl": {"fullname": "smlc.metadata.KnowledgeBaseForTable.turl", "modulename": "smlc.metadata", "qualname": "KnowledgeBaseForTable.turl", "kind": "variable", "doc": "<p>Table URL (parsed).</p>\n", "annotation": ": Union[urllib.parse.ParseResult, urllib.parse.SplitResult]"}, "smlc.metadata.ColumnType": {"fullname": "smlc.metadata.ColumnType", "modulename": "smlc.metadata", "qualname": "ColumnType", "kind": "class", "doc": "<p></p>\n"}, "smlc.metadata.ColumnType.__init__": {"fullname": "smlc.metadata.ColumnType.__init__", "modulename": "smlc.metadata", "qualname": "ColumnType.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">physical</span><span class=\"p\">:</span> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">PhysicalType</span>,</span><span class=\"param\">\t<span class=\"n\">logical</span><span class=\"p\">:</span> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">LogicalType</span>,</span><span class=\"param\">\t<span class=\"n\">semantic</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">SemanticType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value_constraint</span><span class=\"p\">:</span> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">ValueConstraint</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">AnyValue</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, "smlc.metadata.ColumnType.physical": {"fullname": "smlc.metadata.ColumnType.physical", "modulename": "smlc.metadata", "qualname": "ColumnType.physical", "kind": "variable", "doc": "<p></p>\n", "annotation": ": smlc.type.PhysicalType"}, "smlc.metadata.ColumnType.logical": {"fullname": "smlc.metadata.ColumnType.logical", "modulename": "smlc.metadata", "qualname": "ColumnType.logical", "kind": "variable", "doc": "<p></p>\n", "annotation": ": smlc.type.LogicalType"}, "smlc.metadata.ColumnType.semantic": {"fullname": "smlc.metadata.ColumnType.semantic", "modulename": "smlc.metadata", "qualname": "ColumnType.semantic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[smlc.type.SemanticType]", "default_value": "None"}, "smlc.metadata.ColumnType.value_constraint": {"fullname": "smlc.metadata.ColumnType.value_constraint", "modulename": "smlc.metadata", "qualname": "ColumnType.value_constraint", "kind": "variable", "doc": "<p></p>\n", "annotation": ": smlc.type.ValueConstraint", "default_value": "&lt;smlc.type.AnyValue object&gt;"}, "smlc.table": {"fullname": "smlc.table", "modulename": "smlc.table", "kind": "module", "doc": "<p>Table module</p>\n"}, "smlc.table.ITable": {"fullname": "smlc.table.ITable", "modulename": "smlc.table", "qualname": "ITable", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, "smlc.type": {"fullname": "smlc.type", "modulename": "smlc.type", "kind": "module", "doc": "<p>Typing utilities that can help to define what a column type is.</p>\n"}, "smlc.type.PhysicalType": {"fullname": "smlc.type.PhysicalType", "modulename": "smlc.type", "qualname": "PhysicalType", "kind": "class", "doc": "<p>Physical type.</p>\n\n<p>64-, 32-, 16- and 8-bit signed and unsigned integers and floats;\nASCII- and UTF8-strings.</p>\n", "bases": "enum.StrEnum"}, "smlc.type.PhysicalType.i64": {"fullname": "smlc.type.PhysicalType.i64", "modulename": "smlc.type", "qualname": "PhysicalType.i64", "kind": "variable", "doc": "<p>Signed 64-bit integer.</p>\n", "default_value": "&lt;PhysicalType.i64: &#x27;i64&#x27;&gt;"}, "smlc.type.PhysicalType.i32": {"fullname": "smlc.type.PhysicalType.i32", "modulename": "smlc.type", "qualname": "PhysicalType.i32", "kind": "variable", "doc": "<p>Signed 32-bit integer.</p>\n", "default_value": "&lt;PhysicalType.i32: &#x27;i32&#x27;&gt;"}, "smlc.type.PhysicalType.i16": {"fullname": "smlc.type.PhysicalType.i16", "modulename": "smlc.type", "qualname": "PhysicalType.i16", "kind": "variable", "doc": "<p>Signed 16-bit integer.</p>\n", "default_value": "&lt;PhysicalType.i16: &#x27;i16&#x27;&gt;"}, "smlc.type.PhysicalType.i8": {"fullname": "smlc.type.PhysicalType.i8", "modulename": "smlc.type", "qualname": "PhysicalType.i8", "kind": "variable", "doc": "<p>Signed 8-bit integer.</p>\n", "default_value": "&lt;PhysicalType.i8: &#x27;i8&#x27;&gt;"}, "smlc.type.PhysicalType.u64": {"fullname": "smlc.type.PhysicalType.u64", "modulename": "smlc.type", "qualname": "PhysicalType.u64", "kind": "variable", "doc": "<p>Unsigned 64-bit integer.</p>\n", "default_value": "&lt;PhysicalType.u64: &#x27;u64&#x27;&gt;"}, "smlc.type.PhysicalType.u32": {"fullname": "smlc.type.PhysicalType.u32", "modulename": "smlc.type", "qualname": "PhysicalType.u32", "kind": "variable", "doc": "<p>Unsigned 32-bit integer.</p>\n", "default_value": "&lt;PhysicalType.u32: &#x27;u32&#x27;&gt;"}, "smlc.type.PhysicalType.u16": {"fullname": "smlc.type.PhysicalType.u16", "modulename": "smlc.type", "qualname": "PhysicalType.u16", "kind": "variable", "doc": "<p>Unsigned 16-bit integer.</p>\n", "default_value": "&lt;PhysicalType.u16: &#x27;u16&#x27;&gt;"}, "smlc.type.PhysicalType.u8": {"fullname": "smlc.type.PhysicalType.u8", "modulename": "smlc.type", "qualname": "PhysicalType.u8", "kind": "variable", "doc": "<p>Unsigned 8-bit integer.</p>\n", "default_value": "&lt;PhysicalType.u8: &#x27;u8&#x27;&gt;"}, "smlc.type.PhysicalType.f64": {"fullname": "smlc.type.PhysicalType.f64", "modulename": "smlc.type", "qualname": "PhysicalType.f64", "kind": "variable", "doc": "<p>64-bit floating point number.</p>\n", "default_value": "&lt;PhysicalType.f64: &#x27;f64&#x27;&gt;"}, "smlc.type.PhysicalType.f32": {"fullname": "smlc.type.PhysicalType.f32", "modulename": "smlc.type", "qualname": "PhysicalType.f32", "kind": "variable", "doc": "<p>32-bit floating point number.</p>\n", "default_value": "&lt;PhysicalType.f32: &#x27;f32&#x27;&gt;"}, "smlc.type.PhysicalType.f16": {"fullname": "smlc.type.PhysicalType.f16", "modulename": "smlc.type", "qualname": "PhysicalType.f16", "kind": "variable", "doc": "<p>16-bit floating point number.</p>\n", "default_value": "&lt;PhysicalType.f16: &#x27;f16&#x27;&gt;"}, "smlc.type.PhysicalType.f8": {"fullname": "smlc.type.PhysicalType.f8", "modulename": "smlc.type", "qualname": "PhysicalType.f8", "kind": "variable", "doc": "<p>8-bit floating point number.</p>\n", "default_value": "&lt;PhysicalType.f8: &#x27;f8&#x27;&gt;"}, "smlc.type.PhysicalType.ascii_str": {"fullname": "smlc.type.PhysicalType.ascii_str", "modulename": "smlc.type", "qualname": "PhysicalType.ascii_str", "kind": "variable", "doc": "<p>ASCII-string.</p>\n", "default_value": "&lt;PhysicalType.ascii_str: &#x27;ascii_str&#x27;&gt;"}, "smlc.type.PhysicalType.utf8_str": {"fullname": "smlc.type.PhysicalType.utf8_str", "modulename": "smlc.type", "qualname": "PhysicalType.utf8_str", "kind": "variable", "doc": "<p>UTF8-string.</p>\n", "default_value": "&lt;PhysicalType.utf8_str: &#x27;utf8_str&#x27;&gt;"}, "smlc.type.LogicalType": {"fullname": "smlc.type.LogicalType", "modulename": "smlc.type", "qualname": "LogicalType", "kind": "class", "doc": "<p>Logical type.</p>\n\n<p>Natural number, integer, real number, text, boolean, enum, time and\ntimedelta.</p>\n", "bases": "enum.StrEnum"}, "smlc.type.LogicalType.boolean": {"fullname": "smlc.type.LogicalType.boolean", "modulename": "smlc.type", "qualname": "LogicalType.boolean", "kind": "variable", "doc": "<p>True or false (exclusive).</p>\n\n<p>Allows negation, conjunction and disjunction.</p>\n", "default_value": "&lt;LogicalType.boolean: &#x27;boolean&#x27;&gt;"}, "smlc.type.LogicalType.enum": {"fullname": "smlc.type.LogicalType.enum", "modulename": "smlc.type", "qualname": "LogicalType.enum", "kind": "variable", "doc": "<p>Several possible values.</p>\n\n<p>No arithmetic. No order.</p>\n", "default_value": "&lt;LogicalType.enum: &#x27;enum&#x27;&gt;"}, "smlc.type.LogicalType.natural": {"fullname": "smlc.type.LogicalType.natural", "modulename": "smlc.type", "qualname": "LogicalType.natural", "kind": "variable", "doc": "<p>Non-negative integers.</p>\n", "default_value": "&lt;LogicalType.natural: &#x27;natural&#x27;&gt;"}, "smlc.type.LogicalType.integer": {"fullname": "smlc.type.LogicalType.integer", "modulename": "smlc.type", "qualname": "LogicalType.integer", "kind": "variable", "doc": "<p>Integers.</p>\n", "default_value": "&lt;LogicalType.integer: &#x27;integer&#x27;&gt;"}, "smlc.type.LogicalType.real": {"fullname": "smlc.type.LogicalType.real", "modulename": "smlc.type", "qualname": "LogicalType.real", "kind": "variable", "doc": "<p>Real numbers.</p>\n", "default_value": "&lt;LogicalType.real: &#x27;real&#x27;&gt;"}, "smlc.type.LogicalType.text": {"fullname": "smlc.type.LogicalType.text", "modulename": "smlc.type", "qualname": "LogicalType.text", "kind": "variable", "doc": "<p>Text/string that consists of individual characters.</p>\n\n<p>Allows substring search, concatenation and manipulation with\nregister.</p>\n", "default_value": "&lt;LogicalType.text: &#x27;text&#x27;&gt;"}, "smlc.type.LogicalType.time": {"fullname": "smlc.type.LogicalType.time", "modulename": "smlc.type", "qualname": "LogicalType.time", "kind": "variable", "doc": "<p>Time.</p>\n\n<p><code>time_1 - time_0 = timedelta</code>.</p>\n", "default_value": "&lt;LogicalType.time: &#x27;time&#x27;&gt;"}, "smlc.type.LogicalType.timedelta": {"fullname": "smlc.type.LogicalType.timedelta", "modulename": "smlc.type", "qualname": "LogicalType.timedelta", "kind": "variable", "doc": "<p>Timedelta.</p>\n\n<p><code>time_0 + timedelta = time_1</code>.</p>\n", "default_value": "&lt;LogicalType.timedelta: &#x27;timedelta&#x27;&gt;"}, "smlc.type.SemanticType": {"fullname": "smlc.type.SemanticType", "modulename": "smlc.type", "qualname": "SemanticType", "kind": "class", "doc": "<p></p>\n", "bases": "enum.StrEnum"}, "smlc.type.ValueConstraint": {"fullname": "smlc.type.ValueConstraint", "modulename": "smlc.type", "qualname": "ValueConstraint", "kind": "class", "doc": "<p>Value constraint abstract base class.</p>\n", "bases": "abc.ABC"}, "smlc.type.ValueConstraint.is_valid": {"fullname": "smlc.type.ValueConstraint.is_valid", "modulename": "smlc.type", "qualname": "ValueConstraint.is_valid", "kind": "function", "doc": "<p>Has a terse <code>__call__</code> alias:</p>\n\n<p><code>value_constraint(value)</code> is equivalent to\n<code>value_constraint.is_valid(value)</code>.</p>\n\n<p>Non-bool return-values are for specific implementation purposes\n-- please ignore.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "smlc.type.AnyValue": {"fullname": "smlc.type.AnyValue", "modulename": "smlc.type", "qualname": "AnyValue", "kind": "class", "doc": "<p>Any value is valid value.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">av</span> <span class=\"o\">=</span> <span class=\"n\">AnyValue</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">av</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">av</span><span class=\"p\">(</span><span class=\"s2\">&quot;asdf&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">av</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">av</span><span class=\"p\">(</span><span class=\"n\">AnyValue</span><span class=\"p\">())</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.AnyValue.is_valid": {"fullname": "smlc.type.AnyValue.is_valid", "modulename": "smlc.type", "qualname": "AnyValue.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.And": {"fullname": "smlc.type.And", "modulename": "smlc.type", "qualname": "And", "kind": "class", "doc": "<p>Valid value must satisfy all constraints.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">And</span><span class=\"p\">(</span><span class=\"n\">NotEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">NotEqual</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">NotEqual</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">And</span><span class=\"p\">(</span><span class=\"n\">GreaterThan</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">LessThan</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># greater than is not strict by default</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># less than is strict by default</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.And.__init__": {"fullname": "smlc.type.And.__init__", "modulename": "smlc.type", "qualname": "And.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span>)</span>"}, "smlc.type.And.is_valid": {"fullname": "smlc.type.And.is_valid", "modulename": "smlc.type", "qualname": "And.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.Or": {"fullname": "smlc.type.Or", "modulename": "smlc.type", "qualname": "Or", "kind": "class", "doc": "<p>Valid value must satisfy any of constraints.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Or</span><span class=\"p\">(</span><span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Or</span><span class=\"p\">(</span><span class=\"n\">LessThan</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">GreaterThan</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># less than is strict by default</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># greater than is not strict by default</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.Or.__init__": {"fullname": "smlc.type.Or.__init__", "modulename": "smlc.type", "qualname": "Or.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span>)</span>"}, "smlc.type.Or.is_valid": {"fullname": "smlc.type.Or.is_valid", "modulename": "smlc.type", "qualname": "Or.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.Not": {"fullname": "smlc.type.Not", "modulename": "smlc.type", "qualname": "Not", "kind": "class", "doc": "<p>Negation.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.Not.__init__": {"fullname": "smlc.type.Not.__init__", "modulename": "smlc.type", "qualname": "Not.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">constraint</span><span class=\"p\">:</span> <span class=\"n\">smlc</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"o\">.</span><span class=\"n\">ValueConstraint</span></span>)</span>"}, "smlc.type.Not.is_valid": {"fullname": "smlc.type.Not.is_valid", "modulename": "smlc.type", "qualname": "Not.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.Xor": {"fullname": "smlc.type.Xor", "modulename": "smlc.type", "qualname": "Xor", "kind": "class", "doc": "<p>Valid value must satisfy uneven number of constraints. If <code>allow_uneven\n= True</code> valid value must satisfy exactly one constraint.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Xor</span><span class=\"p\">(</span><span class=\"n\">ValidRange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">ValidRange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.Xor.__init__": {"fullname": "smlc.type.Xor.__init__", "modulename": "smlc.type", "qualname": "Xor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">allow_uneven</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "smlc.type.Xor.is_valid": {"fullname": "smlc.type.Xor.is_valid", "modulename": "smlc.type", "qualname": "Xor.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.Equal": {"fullname": "smlc.type.Equal", "modulename": "smlc.type", "qualname": "Equal", "kind": "class", "doc": "<p>Only this value is valid value.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.Equal.__init__": {"fullname": "smlc.type.Equal.__init__", "modulename": "smlc.type", "qualname": "Equal.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">valid_value</span></span>)</span>"}, "smlc.type.Equal.is_valid": {"fullname": "smlc.type.Equal.is_valid", "modulename": "smlc.type", "qualname": "Equal.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.IsIn": {"fullname": "smlc.type.IsIn", "modulename": "smlc.type", "qualname": "IsIn", "kind": "class", "doc": "<p>Only these values are valid values.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">IsIn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.IsIn.__init__": {"fullname": "smlc.type.IsIn.__init__", "modulename": "smlc.type", "qualname": "IsIn.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span>)</span>"}, "smlc.type.IsIn.is_valid": {"fullname": "smlc.type.IsIn.is_valid", "modulename": "smlc.type", "qualname": "IsIn.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.NotEqual": {"fullname": "smlc.type.NotEqual", "modulename": "smlc.type", "qualname": "NotEqual", "kind": "class", "doc": "<p>Any value except this value is valid value.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">NotEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.NotEqual.__init__": {"fullname": "smlc.type.NotEqual.__init__", "modulename": "smlc.type", "qualname": "NotEqual.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">invalid_value</span></span>)</span>"}, "smlc.type.NotEqual.is_valid": {"fullname": "smlc.type.NotEqual.is_valid", "modulename": "smlc.type", "qualname": "NotEqual.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.IsNotIn": {"fullname": "smlc.type.IsNotIn", "modulename": "smlc.type", "qualname": "IsNotIn", "kind": "class", "doc": "<p>Any value except these values is valid value.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">IsNotIn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.IsNotIn.__init__": {"fullname": "smlc.type.IsNotIn.__init__", "modulename": "smlc.type", "qualname": "IsNotIn.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span>)</span>"}, "smlc.type.IsNotIn.is_valid": {"fullname": "smlc.type.IsNotIn.is_valid", "modulename": "smlc.type", "qualname": "IsNotIn.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.GreaterThan": {"fullname": "smlc.type.GreaterThan", "modulename": "smlc.type", "qualname": "GreaterThan", "kind": "class", "doc": "<p>Valid value must be greater than this value. NOT STRICT (&gt;=) by default.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">GreaterThan</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.GreaterThan.__init__": {"fullname": "smlc.type.GreaterThan.__init__", "modulename": "smlc.type", "qualname": "GreaterThan.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">boundary</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "smlc.type.GreaterThan.is_valid": {"fullname": "smlc.type.GreaterThan.is_valid", "modulename": "smlc.type", "qualname": "GreaterThan.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.LessThan": {"fullname": "smlc.type.LessThan", "modulename": "smlc.type", "qualname": "LessThan", "kind": "class", "doc": "<p>Valid value must be less than this value. Strict (&lt;) by default.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">LessThan</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.LessThan.__init__": {"fullname": "smlc.type.LessThan.__init__", "modulename": "smlc.type", "qualname": "LessThan.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">boundary</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "smlc.type.LessThan.is_valid": {"fullname": "smlc.type.LessThan.is_valid", "modulename": "smlc.type", "qualname": "LessThan.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.ValidRange": {"fullname": "smlc.type.ValidRange", "modulename": "smlc.type", "qualname": "ValidRange", "kind": "class", "doc": "<p>Valid value must belong to [lo, hi) range, meaning <code>lo &lt;= valid_value &lt;\nhi</code>. Strictness of the boundaries is configurable.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">ValidRange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.ValidRange.__init__": {"fullname": "smlc.type.ValidRange.__init__", "modulename": "smlc.type", "qualname": "ValidRange.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lo</span>, </span><span class=\"param\"><span class=\"n\">hi</span>, </span><span class=\"param\"><span class=\"n\">strict_lo</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">strict_hi</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "smlc.type.ValidRange.is_valid": {"fullname": "smlc.type.ValidRange.is_valid", "modulename": "smlc.type", "qualname": "ValidRange.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.InvalidRange": {"fullname": "smlc.type.InvalidRange", "modulename": "smlc.type", "qualname": "InvalidRange", "kind": "class", "doc": "<p>Valid value must not belong to [lo, hi) range, meaning either\n<code>valid_value &lt; lo</code> or <code>valid_value &gt;= hi</code>. Strictness of the boundaries is\nconfigurable.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">InvalidRange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.InvalidRange.__init__": {"fullname": "smlc.type.InvalidRange.__init__", "modulename": "smlc.type", "qualname": "InvalidRange.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lo</span>, </span><span class=\"param\"><span class=\"n\">hi</span>, </span><span class=\"param\"><span class=\"n\">strict_lo</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">strict_hi</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "smlc.type.InvalidRange.is_valid": {"fullname": "smlc.type.InvalidRange.is_valid", "modulename": "smlc.type", "qualname": "InvalidRange.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.LengthEqual": {"fullname": "smlc.type.LengthEqual", "modulename": "smlc.type", "qualname": "LengthEqual", "kind": "class", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">LengthEqual</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.LengthEqual.__init__": {"fullname": "smlc.type.LengthEqual.__init__", "modulename": "smlc.type", "qualname": "LengthEqual.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">valid_length</span></span>)</span>"}, "smlc.type.LengthEqual.is_valid": {"fullname": "smlc.type.LengthEqual.is_valid", "modulename": "smlc.type", "qualname": "LengthEqual.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.LengthGreaterThan": {"fullname": "smlc.type.LengthGreaterThan", "modulename": "smlc.type", "qualname": "LengthGreaterThan", "kind": "class", "doc": "<p>Value is valid if its length is greater than specified. NOT STRICT (&gt;=)\nby default.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">LengthGreaterThan</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.LengthGreaterThan.__init__": {"fullname": "smlc.type.LengthGreaterThan.__init__", "modulename": "smlc.type", "qualname": "LengthGreaterThan.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">boundary</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "smlc.type.LengthGreaterThan.is_valid": {"fullname": "smlc.type.LengthGreaterThan.is_valid", "modulename": "smlc.type", "qualname": "LengthGreaterThan.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.LengthLessThan": {"fullname": "smlc.type.LengthLessThan", "modulename": "smlc.type", "qualname": "LengthLessThan", "kind": "class", "doc": "<p>Value is valid if its length is less than specified. Strict (&lt;) by\ndefault.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">LengthLessThan</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.LengthLessThan.__init__": {"fullname": "smlc.type.LengthLessThan.__init__", "modulename": "smlc.type", "qualname": "LengthLessThan.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">boundary</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "smlc.type.LengthLessThan.is_valid": {"fullname": "smlc.type.LengthLessThan.is_valid", "modulename": "smlc.type", "qualname": "LengthLessThan.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "smlc.type.LengthValidRange": {"fullname": "smlc.type.LengthValidRange", "modulename": "smlc.type", "qualname": "LengthValidRange", "kind": "class", "doc": "<p>Value is valid if its length belongs to [lo, hi) range, meaning <code>lo &lt;=\nlen(valid_value) &lt; hi</code>. Strictness of the boundaries is configurable.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">LengthValidRange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaaa&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "bases": "ValueConstraint"}, "smlc.type.LengthValidRange.__init__": {"fullname": "smlc.type.LengthValidRange.__init__", "modulename": "smlc.type", "qualname": "LengthValidRange.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">hi</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">strict_lo</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">strict_hi</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "smlc.type.LengthValidRange.is_valid": {"fullname": "smlc.type.LengthValidRange.is_valid", "modulename": "smlc.type", "qualname": "LengthValidRange.is_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"smlc": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "smlc.metadata": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "smlc.metadata.ParsedURL": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 8}, "smlc.metadata.MetadataManager": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "smlc.metadata.MetadataManager.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 40}, "smlc.metadata.MetadataManager.table_is_registered": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 317}, "smlc.metadata.MetadataManager.register_table": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 115, "bases": 0, "doc": 411}, "smlc.metadata.MetadataManager.unregister_table": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 402}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 248}, "smlc.metadata.KnowledgeBaseForTable": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 377}, "smlc.metadata.KnowledgeBaseForTable.turl": {"qualname": 2, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "smlc.metadata.ColumnType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "smlc.metadata.ColumnType.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 3}, "smlc.metadata.ColumnType.physical": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "smlc.metadata.ColumnType.logical": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "smlc.metadata.ColumnType.semantic": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "smlc.metadata.ColumnType.value_constraint": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "smlc.table": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "smlc.table.ITable": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "smlc.type": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "smlc.type.PhysicalType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 24}, "smlc.type.PhysicalType.i64": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.i32": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.i16": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.i8": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.u64": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.u32": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.u16": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.u8": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 7}, "smlc.type.PhysicalType.f64": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 8}, "smlc.type.PhysicalType.f32": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 8}, "smlc.type.PhysicalType.f16": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 8}, "smlc.type.PhysicalType.f8": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 8}, "smlc.type.PhysicalType.ascii_str": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 5}, "smlc.type.PhysicalType.utf8_str": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 5}, "smlc.type.LogicalType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 19}, "smlc.type.LogicalType.boolean": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 15}, "smlc.type.LogicalType.enum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 13}, "smlc.type.LogicalType.natural": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 6}, "smlc.type.LogicalType.integer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 4}, "smlc.type.LogicalType.real": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 5}, "smlc.type.LogicalType.text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 20}, "smlc.type.LogicalType.time": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 14}, "smlc.type.LogicalType.timedelta": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 15}, "smlc.type.SemanticType": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "smlc.type.ValueConstraint": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "smlc.type.ValueConstraint.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 45}, "smlc.type.AnyValue": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 139}, "smlc.type.AnyValue.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.And": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 353}, "smlc.type.And.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "smlc.type.And.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.Or": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 354}, "smlc.type.Or.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "smlc.type.Or.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.Not": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 104}, "smlc.type.Not.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "smlc.type.Not.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.Xor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 190}, "smlc.type.Xor.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "smlc.type.Xor.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.Equal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 104}, "smlc.type.Equal.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "smlc.type.Equal.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.IsIn": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 156}, "smlc.type.IsIn.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "smlc.type.IsIn.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.NotEqual": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 106}, "smlc.type.NotEqual.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "smlc.type.NotEqual.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.IsNotIn": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 158}, "smlc.type.IsNotIn.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "smlc.type.IsNotIn.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.GreaterThan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 111}, "smlc.type.GreaterThan.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "smlc.type.GreaterThan.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.LessThan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 110}, "smlc.type.LessThan.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "smlc.type.LessThan.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.ValidRange": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 167}, "smlc.type.ValidRange.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "smlc.type.ValidRange.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.InvalidRange": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 174}, "smlc.type.InvalidRange.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "smlc.type.InvalidRange.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.LengthEqual": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 107}, "smlc.type.LengthEqual.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "smlc.type.LengthEqual.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.LengthGreaterThan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 125}, "smlc.type.LengthGreaterThan.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "smlc.type.LengthGreaterThan.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.LengthLessThan": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 124}, "smlc.type.LengthLessThan.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "smlc.type.LengthLessThan.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "smlc.type.LengthValidRange": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 190}, "smlc.type.LengthValidRange.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "smlc.type.LengthValidRange.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}}, "length": 98, "save": true}, "index": {"qualname": {"root": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 19, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.physical": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 15}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager": {"tf": 1}, "smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "i": {"1": {"6": {"docs": {"smlc.type.PhysicalType.i16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.i32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.i8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 19}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.LogicalType.integer": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.InvalidRange": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsIn": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsNotIn": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.time": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.real": {"tf": 1}}, "df": 1}}}}, "u": {"1": {"6": {"docs": {"smlc.type.PhysicalType.u16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.u32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.u64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.u8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.unregister_table": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}}, "df": 1}}}}}}}, "f": {"1": {"6": {"docs": {"smlc.type.PhysicalType.f16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.f32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 6}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.logical": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 9}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LessThan": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.semantic": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.SemanticType": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 18, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.AnyValue": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.Equal": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.natural": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.Not": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.NotEqual": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.Or": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}}, "df": 3}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.Xor": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.GreaterThan": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 19, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"smlc": {"tf": 1}, "smlc.metadata": {"tf": 1}, "smlc.metadata.ParsedURL": {"tf": 1}, "smlc.metadata.MetadataManager": {"tf": 1}, "smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}, "smlc.metadata.ColumnType": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}, "smlc.table": {"tf": 1}, "smlc.table.ITable": {"tf": 1}, "smlc.type": {"tf": 1}, "smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}, "smlc.type.SemanticType": {"tf": 1}, "smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 98}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.semantic": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.SemanticType": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.metadata": {"tf": 1}, "smlc.metadata.ParsedURL": {"tf": 1}, "smlc.metadata.MetadataManager": {"tf": 1}, "smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}, "smlc.metadata.ColumnType": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 17, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager": {"tf": 1}, "smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.physical": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 15}}}}}}}}}}}}, "i": {"1": {"6": {"docs": {"smlc.type.PhysicalType.i16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.i32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.i8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 19}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.LogicalType.integer": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.InvalidRange": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsIn": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsNotIn": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.table": {"tf": 1}, "smlc.table.ITable": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type": {"tf": 1}, "smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}, "smlc.type.SemanticType": {"tf": 1}, "smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 78}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.time": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.real": {"tf": 1}}, "df": 1}}}}, "u": {"1": {"6": {"docs": {"smlc.type.PhysicalType.u16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.u32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.u64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.u8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.unregister_table": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}}, "df": 1}}}}}}}, "f": {"1": {"6": {"docs": {"smlc.type.PhysicalType.f16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.f32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 6}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.logical": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 9}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LessThan": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 18, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.AnyValue": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.And.__init__": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.Equal": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.natural": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.Not": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.NotEqual": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.Or": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}}, "df": 3}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.Xor": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.GreaterThan": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "annotation": {"root": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}, "smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.physical": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.semantic": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.physical": {"tf": 1}, "smlc.metadata.ColumnType.logical": {"tf": 1}, "smlc.metadata.ColumnType.semantic": {"tf": 1}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.logical": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.semantic": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "default_value": {"root": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.ascii_str": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.utf8_str": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.boolean": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.enum": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.natural": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.integer": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.real": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.text": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.time": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.timedelta": {"tf": 1.4142135623730951}}, "df": 23, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.LogicalType.text": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.time": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.type.LogicalType.timedelta": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "u": {"1": {"6": {"docs": {"smlc.type.PhysicalType.u16": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.u32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.u64": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.u8": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"smlc.type.PhysicalType.utf8_str": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 14}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.utf8_str": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.semantic": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.natural": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 23}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 8}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.value_constraint": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}}, "df": 23}}, "i": {"1": {"6": {"docs": {"smlc.type.PhysicalType.i16": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.i32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.i8": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.LogicalType.integer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "x": {"2": {"7": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.i8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.u8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f64": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f32": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f16": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.f8": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.ascii_str": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType.utf8_str": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.boolean": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.enum": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.natural": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.integer": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.real": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.text": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.time": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.timedelta": {"tf": 1.4142135623730951}}, "df": 22}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "f": {"1": {"6": {"docs": {"smlc.type.PhysicalType.f16": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"smlc.type.PhysicalType.f32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType.f8": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.real": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "signature": {"root": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 4.242640687119285}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 7.280109889280518}, "smlc.metadata.MetadataManager.register_table": {"tf": 9.695359714832659}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 7.14142842854285}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 8.246211251235321}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 8.717797887081348}, "smlc.metadata.ColumnType.__init__": {"tf": 10.246950765959598}, "smlc.type.ValueConstraint.is_valid": {"tf": 5.0990195135927845}, "smlc.type.AnyValue.is_valid": {"tf": 4}, "smlc.type.And.__init__": {"tf": 3.1622776601683795}, "smlc.type.And.is_valid": {"tf": 4}, "smlc.type.Or.__init__": {"tf": 3.1622776601683795}, "smlc.type.Or.is_valid": {"tf": 4}, "smlc.type.Not.__init__": {"tf": 4.47213595499958}, "smlc.type.Not.is_valid": {"tf": 4}, "smlc.type.Xor.__init__": {"tf": 4.242640687119285}, "smlc.type.Xor.is_valid": {"tf": 4}, "smlc.type.Equal.__init__": {"tf": 2.8284271247461903}, "smlc.type.Equal.is_valid": {"tf": 4}, "smlc.type.IsIn.__init__": {"tf": 3.1622776601683795}, "smlc.type.IsIn.is_valid": {"tf": 4}, "smlc.type.NotEqual.__init__": {"tf": 2.8284271247461903}, "smlc.type.NotEqual.is_valid": {"tf": 4}, "smlc.type.IsNotIn.__init__": {"tf": 3.1622776601683795}, "smlc.type.IsNotIn.is_valid": {"tf": 4}, "smlc.type.GreaterThan.__init__": {"tf": 4.69041575982343}, "smlc.type.GreaterThan.is_valid": {"tf": 4}, "smlc.type.LessThan.__init__": {"tf": 4.69041575982343}, "smlc.type.LessThan.is_valid": {"tf": 4}, "smlc.type.ValidRange.__init__": {"tf": 6.324555320336759}, "smlc.type.ValidRange.is_valid": {"tf": 4}, "smlc.type.InvalidRange.__init__": {"tf": 6.324555320336759}, "smlc.type.InvalidRange.is_valid": {"tf": 4}, "smlc.type.LengthEqual.__init__": {"tf": 2.8284271247461903}, "smlc.type.LengthEqual.is_valid": {"tf": 4}, "smlc.type.LengthGreaterThan.__init__": {"tf": 5.0990195135927845}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 4}, "smlc.type.LengthLessThan.__init__": {"tf": 5.0990195135927845}, "smlc.type.LengthLessThan.is_valid": {"tf": 4}, "smlc.type.LengthValidRange.__init__": {"tf": 6.928203230275509}, "smlc.type.LengthValidRange.is_valid": {"tf": 4}}, "df": 41, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 22}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.metadata.ColumnType.__init__": {"tf": 2.23606797749979}, "smlc.type.Not.__init__": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 29}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}}, "df": 4}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.GreaterThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.LessThan.__init__": {"tf": 1}, "smlc.type.ValidRange.__init__": {"tf": 1}, "smlc.type.InvalidRange.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 2.23606797749979}, "smlc.type.Not.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.Xor.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"smlc.type.ValidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange.__init__": {"tf": 1.4142135623730951}}, "df": 3, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"smlc.type.LengthEqual.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue.is_valid": {"tf": 1}, "smlc.type.And.is_valid": {"tf": 1}, "smlc.type.Or.is_valid": {"tf": 1}, "smlc.type.Not.is_valid": {"tf": 1}, "smlc.type.Xor.is_valid": {"tf": 1}, "smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.Equal.is_valid": {"tf": 1}, "smlc.type.IsIn.is_valid": {"tf": 1}, "smlc.type.NotEqual.__init__": {"tf": 1}, "smlc.type.NotEqual.is_valid": {"tf": 1}, "smlc.type.IsNotIn.is_valid": {"tf": 1}, "smlc.type.GreaterThan.is_valid": {"tf": 1}, "smlc.type.LessThan.is_valid": {"tf": 1}, "smlc.type.ValidRange.is_valid": {"tf": 1}, "smlc.type.InvalidRange.is_valid": {"tf": 1}, "smlc.type.LengthEqual.is_valid": {"tf": 1}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1}, "smlc.type.LengthLessThan.is_valid": {"tf": 1}, "smlc.type.LengthValidRange.is_valid": {"tf": 1}}, "df": 21, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.Equal.__init__": {"tf": 1}, "smlc.type.LengthEqual.__init__": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}, "smlc.type.Not.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.And.__init__": {"tf": 1}, "smlc.type.Or.__init__": {"tf": 1}, "smlc.type.Xor.__init__": {"tf": 1}, "smlc.type.IsIn.__init__": {"tf": 1}, "smlc.type.IsNotIn.__init__": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"smlc.type.Xor.__init__": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.ColumnType.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.NotEqual.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"smlc.type.LengthGreaterThan.__init__": {"tf": 1}, "smlc.type.LengthLessThan.__init__": {"tf": 1}, "smlc.type.LengthValidRange.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"smlc.type.ValidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange.__init__": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"smlc.table.ITable": {"tf": 1.4142135623730951}, "smlc.type.ValueConstraint": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}, "smlc.type.SemanticType": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}, "smlc.type.SemanticType": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.AnyValue": {"tf": 1}, "smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Not": {"tf": 1}, "smlc.type.Xor": {"tf": 1}, "smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}, "smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.Not": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}}, "df": 14}, "1": {"6": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}}, "df": 4}, "8": {"0": {"8": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1}, "smlc.type.AnyValue": {"tf": 1}, "smlc.type.And": {"tf": 2}, "smlc.type.Or": {"tf": 2}, "smlc.type.Not": {"tf": 1.4142135623730951}, "smlc.type.Xor": {"tf": 1.7320508075688772}, "smlc.type.Equal": {"tf": 1.4142135623730951}, "smlc.type.IsIn": {"tf": 1.4142135623730951}, "smlc.type.NotEqual": {"tf": 1.4142135623730951}, "smlc.type.IsNotIn": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1.4142135623730951}, "smlc.type.LessThan": {"tf": 1.4142135623730951}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 16}, "2": {"3": {"9": {"6": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"smlc.type.And": {"tf": 1.7320508075688772}, "smlc.type.Or": {"tf": 1.7320508075688772}, "smlc.type.Not": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1.4142135623730951}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 15}, "3": {"2": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}}, "df": 4}, "9": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 3.1622776601683795}, "smlc.metadata.MetadataManager.register_table": {"tf": 4.47213595499958}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 4.69041575982343}}, "df": 3}, "docs": {"smlc.type.And": {"tf": 2}, "smlc.type.Or": {"tf": 2}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.IsIn": {"tf": 1.4142135623730951}, "smlc.type.IsNotIn": {"tf": 1.4142135623730951}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 8}, "4": {"docs": {"smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}}, "df": 6}, "6": {"4": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "8": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 4}, "docs": {"smlc": {"tf": 1.7320508075688772}, "smlc.metadata": {"tf": 1.7320508075688772}, "smlc.metadata.ParsedURL": {"tf": 2.23606797749979}, "smlc.metadata.MetadataManager": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.__init__": {"tf": 4.898979485566356}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 14.422205101855956}, "smlc.metadata.MetadataManager.register_table": {"tf": 16.09347693943108}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 15.84297951775486}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 12.649110640673518}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 2.8284271247461903}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 16}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType.__init__": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType.physical": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType.logical": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType.semantic": {"tf": 1.7320508075688772}, "smlc.metadata.ColumnType.value_constraint": {"tf": 1.7320508075688772}, "smlc.table": {"tf": 1.4142135623730951}, "smlc.table.ITable": {"tf": 1.7320508075688772}, "smlc.type": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType": {"tf": 2.449489742783178}, "smlc.type.PhysicalType.i64": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.i32": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.i16": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.i8": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.u64": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.u32": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.u16": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.u8": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.f64": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.f32": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.f16": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.f8": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.ascii_str": {"tf": 1.7320508075688772}, "smlc.type.PhysicalType.utf8_str": {"tf": 1.7320508075688772}, "smlc.type.LogicalType": {"tf": 2.449489742783178}, "smlc.type.LogicalType.boolean": {"tf": 2.449489742783178}, "smlc.type.LogicalType.enum": {"tf": 2.449489742783178}, "smlc.type.LogicalType.natural": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.integer": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.real": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.text": {"tf": 2.449489742783178}, "smlc.type.LogicalType.time": {"tf": 2.8284271247461903}, "smlc.type.LogicalType.timedelta": {"tf": 3}, "smlc.type.SemanticType": {"tf": 1.7320508075688772}, "smlc.type.ValueConstraint": {"tf": 1.7320508075688772}, "smlc.type.ValueConstraint.is_valid": {"tf": 4.242640687119285}, "smlc.type.AnyValue": {"tf": 9.848857801796104}, "smlc.type.AnyValue.is_valid": {"tf": 1.7320508075688772}, "smlc.type.And": {"tf": 15.748015748023622}, "smlc.type.And.__init__": {"tf": 1.7320508075688772}, "smlc.type.And.is_valid": {"tf": 1.7320508075688772}, "smlc.type.Or": {"tf": 15.748015748023622}, "smlc.type.Or.__init__": {"tf": 1.7320508075688772}, "smlc.type.Or.is_valid": {"tf": 1.7320508075688772}, "smlc.type.Not": {"tf": 8.831760866327848}, "smlc.type.Not.__init__": {"tf": 1.7320508075688772}, "smlc.type.Not.is_valid": {"tf": 1.7320508075688772}, "smlc.type.Xor": {"tf": 11.40175425099138}, "smlc.type.Xor.__init__": {"tf": 1.7320508075688772}, "smlc.type.Xor.is_valid": {"tf": 1.7320508075688772}, "smlc.type.Equal": {"tf": 8.602325267042627}, "smlc.type.Equal.__init__": {"tf": 1.7320508075688772}, "smlc.type.Equal.is_valid": {"tf": 1.7320508075688772}, "smlc.type.IsIn": {"tf": 10.583005244258363}, "smlc.type.IsIn.__init__": {"tf": 1.7320508075688772}, "smlc.type.IsIn.is_valid": {"tf": 1.7320508075688772}, "smlc.type.NotEqual": {"tf": 8.602325267042627}, "smlc.type.NotEqual.__init__": {"tf": 1.7320508075688772}, "smlc.type.NotEqual.is_valid": {"tf": 1.7320508075688772}, "smlc.type.IsNotIn": {"tf": 10.583005244258363}, "smlc.type.IsNotIn.__init__": {"tf": 1.7320508075688772}, "smlc.type.IsNotIn.is_valid": {"tf": 1.7320508075688772}, "smlc.type.GreaterThan": {"tf": 8.602325267042627}, "smlc.type.GreaterThan.__init__": {"tf": 1.7320508075688772}, "smlc.type.GreaterThan.is_valid": {"tf": 1.7320508075688772}, "smlc.type.LessThan": {"tf": 8.602325267042627}, "smlc.type.LessThan.__init__": {"tf": 1.7320508075688772}, "smlc.type.LessThan.is_valid": {"tf": 1.7320508075688772}, "smlc.type.ValidRange": {"tf": 10.44030650891055}, "smlc.type.ValidRange.__init__": {"tf": 1.7320508075688772}, "smlc.type.ValidRange.is_valid": {"tf": 1.7320508075688772}, "smlc.type.InvalidRange": {"tf": 10.535653752852738}, "smlc.type.InvalidRange.__init__": {"tf": 1.7320508075688772}, "smlc.type.InvalidRange.is_valid": {"tf": 1.7320508075688772}, "smlc.type.LengthEqual": {"tf": 8.774964387392123}, "smlc.type.LengthEqual.__init__": {"tf": 1.7320508075688772}, "smlc.type.LengthEqual.is_valid": {"tf": 1.7320508075688772}, "smlc.type.LengthGreaterThan": {"tf": 8.94427190999916}, "smlc.type.LengthGreaterThan.__init__": {"tf": 1.7320508075688772}, "smlc.type.LengthGreaterThan.is_valid": {"tf": 1.7320508075688772}, "smlc.type.LengthLessThan": {"tf": 8.94427190999916}, "smlc.type.LengthLessThan.__init__": {"tf": 1.7320508075688772}, "smlc.type.LengthLessThan.is_valid": {"tf": 1.7320508075688772}, "smlc.type.LengthValidRange": {"tf": 10.908712114635714}, "smlc.type.LengthValidRange.__init__": {"tf": 1.7320508075688772}, "smlc.type.LengthValidRange.is_valid": {"tf": 1.7320508075688772}}, "df": 98, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}, "smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.PhysicalType.ascii_str": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 2, "s": {"docs": {"smlc.type.PhysicalType": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"smlc": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"smlc.type.AnyValue": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.metadata": {"tf": 1}, "smlc.metadata.MetadataManager": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.ParsedURL": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata": {"tf": 1}, "smlc.table": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 2}}}, "m": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 2.449489742783178}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 2.6457513110645907}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 2}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 2.449489742783178}}, "df": 5}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LengthEqual": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LengthLessThan": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 2}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 3, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 5}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.ParsedURL": {"tf": null}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": null}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1.4142135623730951}, "smlc.type.Xor": {"tf": 1}}, "df": 3, "s": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"smlc.table.ITable": {"tf": 1}, "smlc.type.ValueConstraint": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.PhysicalType": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}, "smlc.type.ValueConstraint": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 13}}, "y": {"docs": {"smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 6}, "e": {"docs": {"smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}}, "df": 2, "s": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 8, "s": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.And": {"tf": 2.449489742783178}, "smlc.type.Or": {"tf": 2}, "smlc.type.Not": {"tf": 1}, "smlc.type.Xor": {"tf": 1.7320508075688772}, "smlc.type.Equal": {"tf": 1.4142135623730951}, "smlc.type.IsIn": {"tf": 1.4142135623730951}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1.7320508075688772}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1.4142135623730951}, "smlc.type.ValidRange": {"tf": 1.7320508075688772}, "smlc.type.InvalidRange": {"tf": 1.4142135623730951}, "smlc.type.LengthEqual": {"tf": 1.4142135623730951}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1.7320508075688772}}, "df": 20}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.7320508075688772}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.PhysicalType": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}}, "df": 4}}}}}}}}, "r": {"docs": {"smlc.type.And": {"tf": 3.4641016151377544}, "smlc.type.Or": {"tf": 3.4641016151377544}, "smlc.type.Not": {"tf": 2}, "smlc.type.Xor": {"tf": 2.449489742783178}, "smlc.type.Equal": {"tf": 2}, "smlc.type.IsIn": {"tf": 2.449489742783178}, "smlc.type.NotEqual": {"tf": 2}, "smlc.type.IsNotIn": {"tf": 2.449489742783178}, "smlc.type.GreaterThan": {"tf": 2}, "smlc.type.LessThan": {"tf": 2}, "smlc.type.ValidRange": {"tf": 2.449489742783178}, "smlc.type.InvalidRange": {"tf": 2.449489742783178}, "smlc.type.LengthEqual": {"tf": 2}, "smlc.type.LengthGreaterThan": {"tf": 2}, "smlc.type.LengthLessThan": {"tf": 2}, "smlc.type.LengthValidRange": {"tf": 2.449489742783178}}, "df": 16, "f": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.text": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.real": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1, "s": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}}}}, "t": {"1": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 2.449489742783178}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 2.6457513110645907}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 2.23606797749979}}, "df": 5, "f": {"docs": {}, "df": 0, "p": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "2": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "p": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}}, "df": 1}}}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}, "smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.AnyValue": {"tf": 2}, "smlc.type.And": {"tf": 2}, "smlc.type.Or": {"tf": 2.449489742783178}, "smlc.type.Not": {"tf": 1.4142135623730951}, "smlc.type.Xor": {"tf": 1.7320508075688772}, "smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1.7320508075688772}, "smlc.type.NotEqual": {"tf": 1.4142135623730951}, "smlc.type.IsNotIn": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1.4142135623730951}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.7320508075688772}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1.4142135623730951}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 22}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.7320508075688772}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 2.449489742783178}, "smlc.metadata.MetadataManager.register_table": {"tf": 2.449489742783178}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 3}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 2.23606797749979}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 2.6457513110645907}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}, "smlc.table": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.LogicalType": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.table.ITable": {"tf": 1}, "smlc.type": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 9}, "h": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.IsIn": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"smlc.table.ITable": {"tf": 1}, "smlc.type": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}}, "df": 3}, "n": {"docs": {"smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.Equal": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"smlc.type": {"tf": 1}, "smlc.type.PhysicalType": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1.7320508075688772}, "smlc.type.LogicalType.timedelta": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.time": {"tf": 1}, "smlc.type.LogicalType.timedelta": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 2.6457513110645907}, "smlc.metadata.MetadataManager.register_table": {"tf": 2.449489742783178}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 2.8284271247461903}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.7320508075688772}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 2.449489742783178}, "smlc.metadata.KnowledgeBaseForTable.turl": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"smlc.metadata.MetadataManager.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.7320508075688772}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.Xor": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}}}}}}, "f": {"8": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.utf8_str": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"smlc.type.Xor": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.Or": {"tf": 1.7320508075688772}, "smlc.type.Not": {"tf": 1}, "smlc.type.Equal": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"smlc.type.LogicalType": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.InvalidRange": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 5.477225575051661}, "smlc.metadata.MetadataManager.register_table": {"tf": 5.477225575051661}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 5.744562646538029}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 4.242640687119285}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 5.744562646538029}, "smlc.type.AnyValue": {"tf": 4.242640687119285}, "smlc.type.And": {"tf": 6.48074069840786}, "smlc.type.Or": {"tf": 6.48074069840786}, "smlc.type.Not": {"tf": 3.4641016151377544}, "smlc.type.Xor": {"tf": 4.242640687119285}, "smlc.type.Equal": {"tf": 3.4641016151377544}, "smlc.type.IsIn": {"tf": 4.242640687119285}, "smlc.type.NotEqual": {"tf": 3.4641016151377544}, "smlc.type.IsNotIn": {"tf": 4.242640687119285}, "smlc.type.GreaterThan": {"tf": 3.605551275463989}, "smlc.type.LessThan": {"tf": 3.4641016151377544}, "smlc.type.ValidRange": {"tf": 4.242640687119285}, "smlc.type.InvalidRange": {"tf": 4.358898943540674}, "smlc.type.LengthEqual": {"tf": 3.4641016151377544}, "smlc.type.LengthGreaterThan": {"tf": 3.605551275463989}, "smlc.type.LengthLessThan": {"tf": 3.4641016151377544}, "smlc.type.LengthValidRange": {"tf": 4.242640687119285}}, "df": 22}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}, "smlc.type.AnyValue": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.7320508075688772}, "smlc.type": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1.4142135623730951}, "smlc.type.AnyValue": {"tf": 1}, "smlc.type.And": {"tf": 1.4142135623730951}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.Equal": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1.4142135623730951}, "smlc.type.LengthLessThan": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 18, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsIn": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.IsNotIn": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}, "smlc.type.Xor": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 8}, "t": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1, "s": {"docs": {"smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.PhysicalType.i64": {"tf": 1}, "smlc.type.PhysicalType.i32": {"tf": 1}, "smlc.type.PhysicalType.i16": {"tf": 1}, "smlc.type.PhysicalType.i8": {"tf": 1}, "smlc.type.PhysicalType.u64": {"tf": 1}, "smlc.type.PhysicalType.u32": {"tf": 1}, "smlc.type.PhysicalType.u16": {"tf": 1}, "smlc.type.PhysicalType.u8": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1}}, "df": 9, "s": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.LogicalType.integer": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.InvalidRange": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "d": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.7320508075688772}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.LogicalType": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"smlc.type.AnyValue": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.Not": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.LogicalType.natural": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {"smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Not": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"smlc.type.And": {"tf": 1.7320508075688772}, "smlc.type.NotEqual": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"smlc.type.LogicalType.natural": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.PhysicalType.f64": {"tf": 1}, "smlc.type.PhysicalType.f32": {"tf": 1}, "smlc.type.PhysicalType.f16": {"tf": 1}, "smlc.type.PhysicalType.f8": {"tf": 1}, "smlc.type.LogicalType": {"tf": 1.4142135623730951}, "smlc.type.Xor": {"tf": 1}}, "df": 6, "s": {"docs": {"smlc.type.LogicalType.real": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.register_table": {"tf": 2}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}, "smlc.type.AnyValue": {"tf": 1.4142135623730951}, "smlc.type.LengthEqual": {"tf": 2.449489742783178}, "smlc.type.LengthGreaterThan": {"tf": 2.449489742783178}, "smlc.type.LengthLessThan": {"tf": 2.449489742783178}, "smlc.type.LengthValidRange": {"tf": 3.1622776601683795}}, "df": 10}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "w": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}, "y": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"smlc.type.LogicalType.text": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"smlc.table.ITable": {"tf": 1}, "smlc.type": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 7, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"smlc.type.ValueConstraint": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}, "s": {"docs": {"smlc.metadata.MetadataManager.table_is_registered": {"tf": 1}, "smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}, "smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"smlc.type.PhysicalType": {"tf": 1}, "smlc.type.PhysicalType.ascii_str": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"smlc.type.AnyValue": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"smlc.type.And": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {"smlc.type.Xor": {"tf": 1}}, "df": 1, "s": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1, "s": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.table.ITable": {"tf": 1}}, "df": 2, "d": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1.4142135623730951}, "smlc.type.PhysicalType": {"tf": 2}, "smlc.type.LogicalType": {"tf": 1}, "smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.And": {"tf": 1.4142135623730951}}, "df": 6}, "y": {"docs": {"smlc.type.AnyValue": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.AnyValue": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "v": {"docs": {"smlc.type.AnyValue": {"tf": 2.23606797749979}}, "df": 1}, "a": {"docs": {"smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 4, "a": {"docs": {"smlc.type.LengthEqual": {"tf": 1}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 4, "a": {"docs": {"smlc.type.LengthValidRange": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.ValueConstraint": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 2}, "smlc.type.AnyValue": {"tf": 1.4142135623730951}, "smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.Equal": {"tf": 1.4142135623730951}, "smlc.type.NotEqual": {"tf": 1.7320508075688772}, "smlc.type.IsNotIn": {"tf": 1.4142135623730951}, "smlc.type.GreaterThan": {"tf": 1.4142135623730951}, "smlc.type.LessThan": {"tf": 1.4142135623730951}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.7320508075688772}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.register_table": {"tf": 1.4142135623730951}, "smlc.metadata.MetadataManager.unregister_table": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}, "smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.IsIn": {"tf": 1.4142135623730951}, "smlc.type.IsNotIn": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}, "smlc.type.AnyValue": {"tf": 1}, "smlc.type.And": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}, "smlc.type.NotEqual": {"tf": 1}, "smlc.type.IsNotIn": {"tf": 1}, "smlc.type.GreaterThan": {"tf": 1}, "smlc.type.LessThan": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.7320508075688772}, "smlc.type.LengthGreaterThan": {"tf": 1}, "smlc.type.LengthLessThan": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 16, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.type.Xor": {"tf": 1.4142135623730951}, "smlc.type.ValidRange": {"tf": 1}}, "df": 2}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.metadata.MetadataManager.unregister_table": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable": {"tf": 1.4142135623730951}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.7320508075688772}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 2}}, "df": 2}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"smlc.metadata.MetadataManager.knowledge_base_for_table": {"tf": 1}, "smlc.type.LogicalType.text": {"tf": 1}, "smlc.type.Or": {"tf": 1}, "smlc.type.Xor": {"tf": 1}, "smlc.type.ValidRange": {"tf": 1}, "smlc.type.InvalidRange": {"tf": 1}, "smlc.type.LengthValidRange": {"tf": 1}}, "df": 7}, "n": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}, "smlc.metadata.KnowledgeBaseForTable.__init__": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {"smlc.type.Xor": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"smlc.type.Equal": {"tf": 1}, "smlc.type.IsIn": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"smlc.type.LogicalType.boolean": {"tf": 1}, "smlc.type.Or": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.LogicalType.enum": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"smlc.metadata.KnowledgeBaseForTable": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"smlc.type": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"smlc.table.ITable": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"smlc.type.ValueConstraint.is_valid": {"tf": 1}}, "df": 1}}, "i": {"docs": {"smlc.type.ValidRange": {"tf": 1.4142135623730951}, "smlc.type.InvalidRange": {"tf": 1.4142135623730951}, "smlc.type.LengthValidRange": {"tf": 1.4142135623730951}}, "df": 3}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"smlc.type.Xor": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();